{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"var login = function (options) {\n  _validate(options.form, options.template);\n};\n\nvar _validate = function (form, template) {\n  $(form).validate(validation(template));\n};\n\nvar validation = function (template) {\n  return {\n    rules: {\n      emailAddress: {\n        required: true,\n        email: true\n      },\n      password: {\n        required: true\n      }\n    },\n    messages: {\n      emailAddress: {\n        required: 'Need an email address here.',\n        email: 'Is this email address legit?'\n      },\n      password: {\n        required: 'Need a password here.'\n      }\n    },\n    submitHandler: function () {\n      _handleLogin(template);\n    }\n  };\n};\n\nvar _handleLogin = function (template) {\n  var email = template.find('[name=\"emailAddress\"]').value,\n      password = template.find('[name=\"password\"]').value;\n\n  Meteor.loginWithPassword(email, password, function (error) {\n    if (error) {\n      Bert.alert(error.reason, 'warning');\n    } else {\n      Bert.alert('Logged in!', 'success');\n    }\n  });\n};\n\nModules.client.login = login;","ast":null,"map":{"version":3,"sources":["/client/modules/login.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,GAAG,UAAE,OAAO,EAAM;AACzB,WAAS,CAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAE,CAAC;CAC7C,CAAC;;AAEF,IAAI,SAAS,GAAG,UAAE,IAAI,EAAE,QAAQ,EAAM;AACpC,GAAC,CAAE,IAAI,CAAE,CAAC,QAAQ,CAAE,UAAU,CAAE,QAAQ,CAAE,CAAE,CAAC;CAC9C,CAAC;;AAEF,IAAI,UAAU,GAAG,UAAE,QAAQ,EAAM;AAC/B,SAAO;AACL,SAAK,EAAE;AACL,kBAAY,EAAE;AACZ,gBAAQ,EAAE,IAAI;AACd,aAAK,EAAE,IAAI;OACZ;AACD,cAAQ,EAAE;AACR,gBAAQ,EAAE,IAAI;OACf;KACF;AACD,YAAQ,EAAE;AACR,kBAAY,EAAE;AACZ,gBAAQ,EAAE,6BAA6B;AACvC,aAAK,EAAE,8BAA8B;OACtC;AACD,cAAQ,EAAE;AACR,gBAAQ,EAAE,uBAAuB;OAClC;KACF;AACD,iBAAa,EAAA,YAAG;AAAE,kBAAY,CAAE,QAAQ,CAAE,CAAC;KAAE;GAC9C,CAAC;CACH,CAAC;;AAEF,IAAI,YAAY,GAAG,UAAE,QAAQ,EAAM;AACjC,MAAI,KAAK,GAAM,QAAQ,CAAC,IAAI,CAAE,uBAAuB,CAAE,CAAC,KAAK;MACzD,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAE,mBAAmB,CAAE,CAAC,KAAK,CAAC;;AAE1D,QAAM,CAAC,iBAAiB,CAAE,KAAK,EAAE,QAAQ,EAAE,UAAE,KAAK,EAAM;AACtD,QAAK,KAAK,EAAG;AACX,UAAI,CAAC,KAAK,CAAE,KAAK,CAAC,MAAM,EAAE,SAAS,CAAE,CAAC;KACvC,MAAM;AACL,UAAI,CAAC,KAAK,CAAE,YAAY,EAAE,SAAS,CAAE,CAAC;KACvC;GACF,CAAC,CAAC;CACJ,CAAC;;AAEF,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC","file":"/client/modules/login.js.map","sourcesContent":["let login = ( options ) => {\n  _validate( options.form, options.template );\n};\n\nlet _validate = ( form, template ) => {\n  $( form ).validate( validation( template ) );\n};\n\nlet validation = ( template ) => {\n  return {\n    rules: {\n      emailAddress: {\n        required: true,\n        email: true\n      },\n      password: {\n        required: true\n      }\n    },\n    messages: {\n      emailAddress: {\n        required: 'Need an email address here.',\n        email: 'Is this email address legit?'\n      },\n      password: {\n        required: 'Need a password here.'\n      }\n    },\n    submitHandler() { _handleLogin( template ); }\n  };\n};\n\nlet _handleLogin = ( template ) => {\n  let email    = template.find( '[name=\"emailAddress\"]' ).value,\n      password = template.find( '[name=\"password\"]' ).value;\n\n  Meteor.loginWithPassword( email, password, ( error ) => {\n    if ( error ) {\n      Bert.alert( error.reason, 'warning' );\n    } else {\n      Bert.alert( 'Logged in!', 'success' );\n    }\n  });\n};\n\nModules.client.login = login;\n"]},"hash":"51a280f1266f7bfca3469cf8246d940b57958c82"}
