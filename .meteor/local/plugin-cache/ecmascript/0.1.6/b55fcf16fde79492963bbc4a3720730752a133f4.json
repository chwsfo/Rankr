{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"var pathFor = function (path, view) {\n  if (path.hash) {\n    view = path;\n    path = view.hash.route;\n    delete view.hash.route;\n  }\n\n  var query = view.hash.query ? FlowRouter._qs.parse(view.hash.query) : {};\n  return FlowRouter.path(path, view.hash, query);\n};\n\nTemplate.registerHelper('pathFor', pathFor);\n\nTemplate.registerHelper('urlFor', function (path, view) {\n  return Meteor.absoluteUrl(pathFor(path, view).substr(1));\n});\n\nTemplate.registerHelper('currentRoute', function (route) {\n  FlowRouter.watchPathChange();\n  return FlowRouter.current().route.name === route ? 'active' : '';\n});","ast":null,"map":{"version":3,"sources":["/client/helpers/flow-router.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,GAAG,UAAE,IAAI,EAAE,IAAI,EAAM;AAC9B,MAAK,IAAI,CAAC,IAAI,EAAG;AACf,QAAI,GAAG,IAAI,CAAC;AACZ,QAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AACvB,WAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;GACxB;;AAED,MAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,GAAG,EAAE,CAAC;AAC3E,SAAO,UAAU,CAAC,IAAI,CAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAE,CAAC;CAClD,CAAC;;AAEF,QAAQ,CAAC,cAAc,CAAE,SAAS,EAAE,OAAO,CAAE,CAAC;;AAE9C,QAAQ,CAAC,cAAc,CAAE,QAAQ,EAAE,UAAE,IAAI,EAAE,IAAI,EAAM;AACnD,SAAO,MAAM,CAAC,WAAW,CAAE,OAAO,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC,MAAM,CAAE,CAAC,CAAE,CAAE,CAAC;CAChE,CAAC,CAAC;;AAEH,QAAQ,CAAC,cAAc,CAAE,cAAc,EAAE,UAAE,KAAK,EAAM;AACpD,YAAU,CAAC,eAAe,EAAE,CAAC;AAC7B,SAAO,UAAU,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,CAAC;CAClE,CAAC,CAAC","file":"/client/helpers/flow-router.js.map","sourcesContent":["let pathFor = ( path, view ) => {\n  if ( path.hash ) {\n    view = path;\n    path = view.hash.route;\n    delete view.hash.route;\n  }\n\n  let query = view.hash.query ? FlowRouter._qs.parse( view.hash.query ) : {};\n  return FlowRouter.path( path, view.hash, query );\n};\n\nTemplate.registerHelper( 'pathFor', pathFor );\n\nTemplate.registerHelper( 'urlFor', ( path, view ) => {\n  return Meteor.absoluteUrl( pathFor( path, view ).substr( 1 ) );\n});\n\nTemplate.registerHelper( 'currentRoute', ( route ) => {\n  FlowRouter.watchPathChange();\n  return FlowRouter.current().route.name === route ? 'active' : '';\n});\n"]},"hash":"b55fcf16fde79492963bbc4a3720730752a133f4"}
